generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.sqlite"
}
model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String

  roleId   Int 
  role     Role    @relation(fields: [roleId], references: [id], onDelete: Cascade)

  profile  Profile?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id      Int       @id @default(autoincrement())
  userId  Int       @unique
  user    User      @relation(fields: [userId], references: [id])
  name    String
  avatar  String    @default("default.jpg")

  videos   Video[]
  comments Comment[]
  likes    Like[]
}

model Role {
  id      Int    @id @default(autoincrement())
  title   String
  User    User[]
}

model Video {
  id       Int      @id @default(autoincrement())
  title    String
  url      String?
  profileId Int
  profile  Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)

  likes    Like[]
  comments Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  profileId Int
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  videoId   Int
  video     Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  profileId Int
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  videoId   Int
  video     Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}