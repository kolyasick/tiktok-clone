generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id       Int      @id @default(autoincrement())
  name     String
  email    String      @unique
  password String
  avatar   String      @default("/avatars/defaul.png")
  videos   Videos[]    
  likes    Likes[]     
  comments Comments[] 
  roleId   Int
  role     Roles        @relation(fields: [roleId], references: [id], onDelete: Cascade)

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Roles {
  id      Int          @id @default(autoincrement())
  title   String       
  users   Users[]
}

model Videos {
  id       Int         @id @default(autoincrement())
  title    String
  url      String?
  userId   Int
  user     Users       @relation(fields: [userId], references: [id], onDelete: Cascade)
  likes    Likes[]     
  comments Comments[] 

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Likes {
  id     Int    @id @default(autoincrement())
  userId Int
  postId Int
  user   Users   @relation(fields: [userId], references: [id], onDelete: Cascade)
  post   Videos   @relation(fields: [postId], references: [id], onDelete: Cascade)  

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Comments {
  id     Int     @id @default(autoincrement())
  text   String
  userId Int
  postId Int
  user   Users   @relation(fields: [userId], references: [id], onDelete: Cascade) 
  post   Videos   @relation(fields: [postId], references: [id], onDelete: Cascade) 

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}
